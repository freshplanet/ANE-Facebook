<?xml version="1.0" encoding="UTF-8"?>
<project name="Air Native Extension Build Scripts" default="all">

    <!-- Config -->
    <property file="build.config"/>

    <!-- All -->
    <target name="all" depends="clean, ios,android,swc,swc-default,package" description="Full build of extension"/>

    <target name="clean">
        <delete dir="temp/"/>
    </target>

    <!-- iOS -->
    <target name="ios" description="Build iOS Library">

        <!-- make the build directory for the objc code -->
        <mkdir dir="temp/ios/build/"/>

        <!-- clean the build -->
        <exec executable="xcodebuild" failonerror="true" dir="../ios/">
            <arg line="-project ${name}.xcodeproj"/>
            <arg line="-alltargets clean"/>
        </exec>

        <!-- compile the ios lib -->
        <exec executable="xcodebuild" failonerror="true" dir="../ios/">
            <arg line="-project ${name}.xcodeproj"/>
            <arg line="-sdk ${ios.sdkversion}"/>
            <arg line="-alltargets"/>
            <arg line="-configuration Release"/>
            <arg line="SYMROOT=../build/temp/ios/build/"/>
        </exec>

        <!-- copy the ios lib to the base temp ios directory -->
        <copy file="temp/ios/build/Release-iphoneos/lib${name}.a" todir="temp/ios" overwrite="true"/>

        <!-- Copy over required frameworks and libs -->
        <copy todir="temp/ios/FBSDKCoreKit.framework" overwrite="true" flatten="true" includeEmptyDirs="false">
            <fileset dir="../ios/frameworks/FBSDKCoreKit.framework"/>
        </copy>
        <copy todir="temp/ios/FBSDKLoginKit.framework" overwrite="true" flatten="true" includeEmptyDirs="false">
            <fileset dir="../ios/frameworks/FBSDKLoginKit.framework"/>
        </copy>
        <copy todir="temp/ios/FBSDKShareKit.framework" overwrite="true" flatten="true" includeEmptyDirs="false">
            <fileset dir="../ios/frameworks/FBSDKShareKit.framework"/>
        </copy>
        <copy todir="temp/ios/Bolts.framework" overwrite="true" flatten="true" includeEmptyDirs="false">
            <fileset dir="../ios/frameworks/Bolts.framework"/>
        </copy>
        <copy todir="temp/ios/FBAudienceNetwork.framework" overwrite="true" flatten="true" includeEmptyDirs="false">
            <fileset dir="../ios/frameworks/FBAudienceNetwork.framework"/>
        </copy>

        <!-- remove the build directory -->
        <delete dir="temp/ios/build/"/>
    </target>

    <!-- Android -->
    <target name="android" description="Build Android Library">

        <mkdir dir="temp/android/"/>

        <echo message="Using Java version ${ant.java.version}."/>

        <exec executable="/usr/libexec/java_home" outputproperty="java7home">
            <arg line="-v 1.8" />
        </exec>

        <echo message="Java 7 Home: ${java7home}" />

        <exec executable="./gradlew${bin.ext}" dir="../">
            <env key="JAVA_HOME" path="${java7home}"/>
            <env key="ANDROID_HOME" path="${android.sdk}"/>
            <arg line=":android:assembleRelease"/>
        </exec>

        <!-- Copy over the required libs -->
        <copy file="../android/libs/android-support-v4.jar" todir="temp/android/"/>
        <copy file="../android/libs/bolts-android-1.2.0.jar" todir="temp/android/"/>
        <copy file="${android.sdk}/tools/lib/annotations.jar" todir="temp/android/"/>

        <unzip src="../android/build/outputs/aar/android-release.aar" dest="../android/build/aar" overwrite="true"/>

        <copy file="../android/build/aar/classes.jar" tofile="temp/android/lib${name}.jar"/>

        <!-- Copy over required resources -->
        <copy todir="temp/android/airfacebook-res/">
            <fileset dir="../android/res/"/>
        </copy>

        <!-- remove the build classes -->
        <delete dir="../android/build"/>
    </target>

    <!-- Actionscript -->
    <target name="swc" description="Build SWC library">
        <mkdir dir="temp/swc/content/"/>

        <fileset dir="../actionscript/src" casesensitive="yes" id="classfiles">
            <include name="**/*.as"/>
        </fileset>

        <pathconvert property="classlist" refid="classfiles" pathsep=" " dirsep=".">
            <regexpmapper from=".*src.(.*)\.as" to="\1"/>
        </pathconvert>

        <exec executable="${flex.sdk}/bin/compc${bin.ext}" failonerror="true">
            <env key="AIR_SDK_HOME" value="${flex.sdk}"/>
            <arg line='-source-path ../actionscript/src'/>
            <arg line='-output temp/swc/${name}.swc'/>
            <arg line='-swf-version=29'/>
            <arg line='-external-library-path+="${flex.sdk}/frameworks/libs/air/airglobal.swc"'/>
            <arg line='-include-classes ${classlist}'/>
        </exec>

        <copy file="temp/swc/${name}.swc" todir="../bin/" />

        <unzip src="temp/swc/${name}.swc" dest="temp/swc/content" overwrite="true"/>

        <copy file="temp/swc/content/library.swf" todir="temp/ios" overwrite="true"/>
        <copy file="temp/swc/content/library.swf" todir="temp/ios-simulator" overwrite="true"/>
        <copy file="temp/swc/content/library.swf" todir="temp/android" overwrite="true"/>
        <copy file="temp/swc/content/library.swf" todir="temp/default" overwrite="true"/>
    </target>

    <target name="swc-default" description="Build default SWC library">
        <fileset dir="../default/src" casesensitive="yes" id="classfiles">
            <include name="**/*.as"/>
        </fileset>

        <pathconvert property="classlist" refid="classfiles" pathsep=" " dirsep=".">
            <regexpmapper from=".*src.(.*)\.as" to="\1"/>
        </pathconvert>

        <exec executable="${flex.sdk}/bin/compc${bin.ext}" failonerror="true">
            <env key="AIR_SDK_HOME" value="${flex.sdk}"/>
            <arg line='-source-path ../default/src'/>
            <arg line='-output temp/swc-default/${name}.swc'/>
            <arg line='-swf-version=29'/>
            <arg line='-external-library-path+="${flex.sdk}/frameworks/libs/air/airglobal.swc"'/>
            <arg line='-include-classes ${classlist}'/>
            <arg line='-include-libraries ../default/lib'/>
        </exec>

        <unzip src="temp/swc-default/${name}.swc" dest="temp/swc-default/content" overwrite="true"/>

        <copy file="temp/swc-default/content/library.swf" todir="temp/default" overwrite="true"/>
    </target>

    <!-- Package -->
    <target name="package" description="Create the extension package">
        <exec executable="${flex.sdk}/bin/adt${bin.ext}" failonerror="true" dir="temp/">
            <arg value="-package"/>
            <arg value="-target"/>
            <arg value="ane"/>
            <arg value="${name}.ane"/>
            <arg value="../extension.xml"/>
            <arg line="-swc swc/${name}.swc"/>
            <arg line="-platform iPhone-ARM -platformoptions ../platform-ios.xml -C ios/ ."/>
            <arg line="-platform Android-ARM -platformoptions ../platform-android.xml -C android/ ."/>
            <arg line="-platform default -C default/ ."/>
        </exec>

        <move file="temp/${name}.ane" todir="../bin"/>
        <!--<delete dir="temp/"/>-->
    </target>

    <!-- HTML Documentation (must be run manually) -->
    <target name="asdoc" description="generate the asdoc in readable html">
        <exec executable="${flex.sdk}/bin/asdoc${bin.ext}" failonerror="true">
            <env key="FLEX_HOME" value="${flex.sdk}"/>
            <env key="FALCON_HOME" value="${flex.sdk}"/>
            <arg line='-source-path ../actionscript/src'/>
            <arg line='-doc-sources ../actionscript/src'/>
            <arg line='-output ../docs'/>
            <arg line='-library-path+="${flex.sdk}/frameworks/libs/air/airglobal.swc"'/>
        </exec>
    </target>

</project>
